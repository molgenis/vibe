<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <groupId>org.molgenis</groupId>
    <artifactId>vibe</artifactId>
    <version>4.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- More Project Information -->
    <name>VIBE</name>
    <description>
        A tool to generate prioritized genes using phenotype information.
    </description>
    <url>https://github.com/molgenis/vibe</url>
    <licenses>
        <license>
            <name>GNU Lesser General Public License v3.0</name>
        </license>
    </licenses>

    <scm>
        <connection>
            scm:git:https://${env.GITHUB_USER}:${env.GITHUB_TOKEN}@github.com/molgenis/vibe.git
        </connection>
        <url>https://github.com/molgenis/vibe</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>MOLGENIS development team</name>
            <email>molgenis@gmail.com</email>
            <organization>
                University Medical Centre Groningen, System Genetics, Genomics Coordination Centre
            </organization>
            <organizationUrl>http://www.molgenis.org</organizationUrl>
        </developer>
    </developers>

    <properties>
        <!-- vibe TDB information (requirement: vibe-tdb.version <= project.version) -->
        <vibe-tdb.version>3.1.0</vibe-tdb.version>
        <vibe-tdb.archive>vibe-${vibe-tdb.version}-tdb.tar.gz</vibe-tdb.archive>
        <vibe-tdb.download>https://molgenis.org/downloads/vibe/${vibe-tdb.archive}</vibe-tdb.download>

        <!-- used hpo.owl github tag -->
        <hpo-owl.tag>v2019-11-08</hpo-owl.tag>
        <hpo-owl.download>https://raw.githubusercontent.com/obophenotype/human-phenotype-ontology/${hpo-owl.tag}/hp.owl</hpo-owl.download>

        <!-- authentication for release scm plugin -->
        <project.scm.id>github</project.scm.id>

        <!-- defines java version of code -->
        <java.version>1.8</java.version>

        <!-- artifact publish properties -->
        <sonatype.id>sonatype-nexus-staging</sonatype.id>

        <!-- sonar configuration -->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>molgenis</sonar.organization>
        <sonar.github.repository>molgenis/vibe</sonar.github.repository>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <sonar.coverage.jacoco.xmlReportPaths>${jacoco.merged-test.outputDir}/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>

        <!-- jacoco configuration -->
        <jacoco.unit-test.destFile>${jacoco.merged-test.fileSetDir}/jacoco-unit-tests.exec</jacoco.unit-test.destFile>
        <jacoco.unit-test.dataFile>${jacoco.unit-test.destFile}</jacoco.unit-test.dataFile>
        <jacoco.unit-test.outputDir>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</jacoco.unit-test.outputDir>

        <jacoco.integration-test.destFile>${jacoco.merged-test.fileSetDir}/jacoco-integration-tests.exec</jacoco.integration-test.destFile>
        <jacoco.integration-test.dataFile>${jacoco.integration-test.destFile}</jacoco.integration-test.dataFile>
        <jacoco.integration-test.outputDir>${project.reporting.outputDirectory}/jacoco-integration-test-coverage-report</jacoco.integration-test.outputDir>

        <jacoco.merged-test.fileSetDir>${project.build.directory}/jacoco-output</jacoco.merged-test.fileSetDir>
        <jacoco.merged-test.destFile>${jacoco.merged-test.fileSetDir}/jacoco-merged-tests.exec</jacoco.merged-test.destFile>
        <jacoco.merged-test.dataFile>${jacoco.merged-test.destFile}</jacoco.merged-test.dataFile>
        <jacoco.merged-test.outputDir>${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</jacoco.merged-test.outputDir>

        <!-- plugin versions -->
        <checksum-maven-plugin.version>1.8</checksum-maven-plugin.version>
        <sonar-maven-plugin.version>3.5.0.1254</sonar-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.2</jacoco-maven-plugin.version>
        <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <pgp-maven-plugin.version>1.1</pgp-maven-plugin.version>

        <!-- dependency versions -->
        <apache-jena-libs.version>3.13.1</apache-jena-libs.version>
        <commons-cli.version>1.4</commons-cli.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>${sonatype.id}</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>${sonatype.id}</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- checksum creation -->
                <plugin>
                    <groupId>net.nicoulaj.maven.plugins</groupId>
                    <artifactId>checksum-maven-plugin</artifactId>
                    <version>${checksum-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>artifacts</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <algorithms>
                            <!-- see: https://en.wikipedia.org/wiki/Secure_Hash_Algorithms -->
                            <algorithm>MD5</algorithm>
                            <algorithm>SHA-512</algorithm>
                            <algorithm>SHA3-512</algorithm>
                        </algorithms>
                        <!-- dir for individual files -->
                        <individualFilesOutputDirectory>checksums</individualFilesOutputDirectory>
                    </configuration>
                </plugin>

                <!-- integrates SonarQube -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>

                <!-- JAva COde COverage -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <!-- unit tests -->
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.unit-test.destFile}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.unit-test.dataFile}</dataFile>
                                <outputDirectory>${jacoco.unit-test.outputDir}</outputDirectory>
                            </configuration>
                        </execution>

                        <!-- integration tests -->
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.integration-test.destFile}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.integration-test.dataFile}</dataFile>
                                <outputDirectory>${jacoco.integration-test.outputDir}</outputDirectory>
                            </configuration>
                        </execution>

                        <!-- tests combined -->
                        <execution>
                            <id>merge-unit-and-integration</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${jacoco.merged-test.fileSetDir}</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${jacoco.merged-test.destFile}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>create-merged-report</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.merged-test.dataFile}</dataFile>
                                <outputDirectory>${jacoco.merged-test.outputDir}</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- deploy to sonatype nexus -->
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${nexus-staging-maven-plugin.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>${sonatype.id}</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <!-- closing the repo in the build fails miserably with a connection reset error -->
                        <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                    </configuration>
                </plugin>

                <!-- plugin for releasing -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <scmCommentPrefix>[ci skip] [maven-release-plugin]${line.separator}</scmCommentPrefix>
                    </configuration>
                </plugin>

                <!-- sign artifacts -->
                <plugin>
                    <!-- sign in a non-interactive way -->
                    <groupId>org.kohsuke</groupId>
                    <artifactId>pgp-maven-plugin</artifactId>
                    <version>${pgp-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.jena</groupId>
                <artifactId>apache-jena-libs</artifactId>
                <version>${apache-jena-libs.version}</version>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>

            <dependency>
                <groupId>org.molgenis</groupId>
                <artifactId>vibe-core</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>vibe-core</module>
        <module>vibe-cli</module>
    </modules>
</project>
